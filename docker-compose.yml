services:

  service-db:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 2s
      retries: 25
    ports:
      - "${POSTGRES_DB_PORT}:5432"
    volumes:
      - ./db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
      - db-data:/var/lib/postgresql/data

  discovery:
    build:
      context: ./discovery
      dockerfile: Dockerfile
    image: discovery-service
    restart: unless-stopped
    ports:
      - "${DISCOVERY_SERVICE_PORT}:${DISCOVERY_SERVICE_PORT}"
    env_file:
      - .env
    environment:
      DISCOVERY_SERVICE_PORT: "${DISCOVERY_SERVICE_PORT}"

  config-server:
    build: ./config-server
    container_name: config-server
    ports:
      - "8888:8888"
    depends_on:
      - service-db
      - discovery
    environment:
      - SPRING_CLOUD_CONFIG_URI=http://config-server:8888
      - SPRING_CLOUD_CONFIG_FAIL_FAST=true


  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway
    restart: unless-stopped
    ports:
      - "${GATEWAY_API_PORT}:${GATEWAY_API_PORT}"
    env_file:
      - .env
    environment:
      GATEWAY_API_PORT: "${GATEWAY_API_PORT}"
      EXPIRATION: "${EXPIRATION}"
      REFRESH_EXPIRATION: "${REFRESH_EXPIRATION}"
      ONE_TIME_TOKEN_EXPIRATION: "${ONE_TIME_TOKEN_EXPIRATION}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - service-db
      - discovery
      - config-server

  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    image: auth-service
    restart: unless-stopped
    ports:
      - "${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}"
    env_file:
      - .env
    environment:
      EXPIRATION: "${EXPIRATION}"
      REFRESH_EXPIRATION: "${REFRESH_EXPIRATION}"
      ONE_TIME_TOKEN_EXPIRATION: "${ONE_TIME_TOKEN_EXPIRATION}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - service-db
      - discovery
      - config-server

  doument-service:   # <-- исправил название
    build:
      context: ./doument-service   # у тебя папка с опечаткой
      dockerfile: Dockerfile
    image: doument-service
    restart: unless-stopped
    ports:
      - "${DOCUMENT_SERVICE_PORT}:${DOCUMENT_SERVICE_PORT}"
    env_file:
      - .env
    environment:
      EXPIRATION: "${EXPIRATION}"
      REFRESH_EXPIRATION: "${REFRESH_EXPIRATION}"
      ONE_TIME_TOKEN_EXPIRATION: "${ONE_TIME_TOKEN_EXPIRATION}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on:
      - service-db
      - discovery
      - config-server

volumes:
  db-data: